name: Client CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
permissions:
  contents: read
  pull-requests: write
  actions: write

env:
  CARGO_TERM_COLOR: always

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'always'
          paths_ignore: '["server/**"]'

  common-ci:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Flutter Init
        run: cd client && flutter pub get
      - name: FLutter Fmt
        run: cd client && dart format ./ --set-exit-if-changed
      - name: Grpc generate
        run: dart pub global activate protoc_plugin && python script/generate.pb.dart.py
      - name: Flutter Check
        run: cd client && flutter analyze
