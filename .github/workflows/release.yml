name: Release

on:
  push:
    branches: ["main"]

jobs:
  create_server_release:
    name: Create server release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Get release version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Prepare server bundle files
        run: |
          mkdir -p bundle
          cp docker/compose.yml bundle/
          cp docker/compose.debian.yml bundle/
          cp -r config bundle/

      - name: Update image tags in compose files
        run: |
          export VERSION=${{ steps.get_version.outputs.VERSION }}
          sed -i "s/nightly/$VERSION/g" bundle/compose.yml
          sed -i "s/nightly/$VERSION/g" bundle/compose.debian.yml

      - name: Create server bundle archive
        run: |
          cd bundle
          zip -r ../ourchat-server.zip .
          cd ..

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ourchat-server.zip

  create_client_linux_release:
    name: Create client release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Flutter Init
        run: cd client && flutter pub get
      - name: Grpc generate
        run: dart pub global activate protoc_plugin && python script/generate.pb.dart.py
      - name: Drift generate
        run: cd client && dart run build_runner build
      - name: Install packages
        run: |
          apt update
          apt install -y libgtk-3-dev
      - name: Build Release
        run: cd client && flutter build linux
      - name: Create Zip
        run: zip -r ourchat-client-linux.zip client/build/linux/x64/release/bundle/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ourchat-client-linux.zip
