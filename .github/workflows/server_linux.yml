name: ServerLinux

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

env:
  CARGO_TERM_COLOR: always

# Minimum permissions required by skip-duplicate-actions
permissions:
  actions: write
  contents: read

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'always'
          paths_ignore: '["client/**"]'
  test-alpine:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # Build Alpine image
      - name: Build Alpine Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.test-alpine
          tags: test-ourchat-alpine:latest
          load: true

      - name: Test-Alpine
        run: |
          docker compose -f docker/compose.test-alpine.yml up -d
          docker compose -f docker/compose.test-alpine.yml exec OurChatServer sh -c "cd /app && cargo test"

  test-debian:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Build Debian image
      - name: Build Debian Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.test-debian
          tags: test-ourchat-debian:latest
          load: true

      - name: Test-Debian
        run: |
          docker compose -f docker/compose.test-debian.yml up -d
          docker compose -f docker/compose.test-debian.yml exec OurChatServer sh -c "cd /app && cargo test"
