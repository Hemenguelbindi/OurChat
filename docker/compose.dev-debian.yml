# This template can set up an environment for testing or developing
name: ourchat_server
services:
  OurChatServer:
    init: true
    build:
      context: ..
      dockerfile: docker/Dockerfile.test-debian
    image: test-ourchat-debian:latest
    environment:
      - OURCHAT_TEST_CONFIG_DIR=/app/docker/config
      - OURCHAT_LOG=trace,actix_web=off,actix_server=off,mio=off,h2=off,tonic=off,tower=off,tokio::task::waker=off,runtime::resource=off,actix_http=off,lapin=off,hyper_util=off,pinky_swear=off,async_io=off,polling=off
    command: tail -f /dev/null
    working_dir: /app
    volumes:
      - ../resource/:/app/docker/resource
    ports:
      - "7777:7777"
      - "7778:7778"
    networks:
      - net
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: OurChat
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    networks:
      - net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 5
  garnet:
    image: 'ghcr.io/microsoft/garnet'
    restart: always
    command: GarnetServer --config-import-path /usr/local/etc/garnet/garnet.conf
    ports:
      - "6379:6379"
    volumes:
      - ./data/garnet-data:/data
      - ./config/garnet.conf:/usr/local/etc/garnet/garnet.conf
    networks:
      - net
  mq:
    image: rabbitmq:4-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: 123456
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - net

networks:
  net:
    driver: bridge
